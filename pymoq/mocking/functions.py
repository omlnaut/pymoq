# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/04_mocking.functions.ipynb.

# %% auto 0
__all__ = ['FunctionMock']

# %% ../../nbs/04_mocking.functions.ipynb 1
import inspect
from ..core import AnyCallable

# %% ../../nbs/04_mocking.functions.ipynb 11
class FunctionMock:
    "Mocks a function object based on its signature"
    def __init__(self, func: AnyCallable):
        self._func = func
        self._signature = inspect.signature(self._func)
        
    def arguments_valid(self, *args, **kwargs) -> bool:
        "Given an arbitrary argument list (both positional and keyword arguments), returns True if the mocked function could be called with those arguments"
        try:
            self._signature.bind(*args, **kwargs)
            return True
        except:
            return False
