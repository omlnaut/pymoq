# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/pymoq',
                'doc_host': 'https://omlnaut.github.io',
                'git_url': 'https://github.com/omlnaut/pymoq',
                'lib_path': 'pymoq'},
  'syms': { 'pymoq.argument_validators': { 'pymoq.argument_validators.ArgumentFunctionValidator': ( 'validators.html#argumentfunctionvalidator',
                                                                                                    'pymoq/argument_validators.py'),
                                           'pymoq.argument_validators.ArgumentFunctionValidator.__init__': ( 'validators.html#argumentfunctionvalidator.__init__',
                                                                                                             'pymoq/argument_validators.py'),
                                           'pymoq.argument_validators.ArgumentFunctionValidator.__repr__': ( 'validators.html#argumentfunctionvalidator.__repr__',
                                                                                                             'pymoq/argument_validators.py'),
                                           'pymoq.argument_validators.ArgumentFunctionValidator.__str__': ( 'validators.html#argumentfunctionvalidator.__str__',
                                                                                                            'pymoq/argument_validators.py'),
                                           'pymoq.argument_validators.ArgumentFunctionValidator.is_valid': ( 'validators.html#argumentfunctionvalidator.is_valid',
                                                                                                             'pymoq/argument_validators.py'),
                                           'pymoq.argument_validators.ArgumentFunctionValidator.name': ( 'validators.html#argumentfunctionvalidator.name',
                                                                                                         'pymoq/argument_validators.py'),
                                           'pymoq.argument_validators.ArgumentFunctionValidator.position': ( 'validators.html#argumentfunctionvalidator.position',
                                                                                                             'pymoq/argument_validators.py'),
                                           'pymoq.argument_validators.ArgumentValidator': ( 'validators.html#argumentvalidator',
                                                                                            'pymoq/argument_validators.py'),
                                           'pymoq.argument_validators.ArgumentValidator.is_valid': ( 'validators.html#argumentvalidator.is_valid',
                                                                                                     'pymoq/argument_validators.py'),
                                           'pymoq.argument_validators.ArgumentValidator.name': ( 'validators.html#argumentvalidator.name',
                                                                                                 'pymoq/argument_validators.py'),
                                           'pymoq.argument_validators.ArgumentValidator.position': ( 'validators.html#argumentvalidator.position',
                                                                                                     'pymoq/argument_validators.py')},
            'pymoq.core': { 'pymoq.core.AnyCallable': ('core.html#anycallable', 'pymoq/core.py'),
                            'pymoq.core.AnyCallable.__call__': ('core.html#anycallable.__call__', 'pymoq/core.py')},
            'pymoq.mocking.functions': { 'pymoq.mocking.functions.FunctionMock': ( 'mocking.functions.html#functionmock',
                                                                                   'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.FunctionMock.__call__': ( 'mocking.functions.html#functionmock.__call__',
                                                                                            'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.FunctionMock.__init__': ( 'mocking.functions.html#functionmock.__init__',
                                                                                            'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.FunctionMock.arguments_valid': ( 'mocking.functions.html#functionmock.arguments_valid',
                                                                                                   'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.FunctionMock.fill_up_arg_list': ( 'mocking.functions.html#functionmock.fill_up_arg_list',
                                                                                                    'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.FunctionMock.setup': ( 'mocking.functions.html#functionmock.setup',
                                                                                         'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.Setup': ('mocking.functions.html#setup', 'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.Setup.__init__': ( 'mocking.functions.html#setup.__init__',
                                                                                     'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.Setup.get_return_value': ( 'mocking.functions.html#setup.get_return_value',
                                                                                             'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.Setup.is_valid': ( 'mocking.functions.html#setup.is_valid',
                                                                                     'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.Setup.returns': ( 'mocking.functions.html#setup.returns',
                                                                                    'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.add_self_parameter': ( 'mocking.functions.html#add_self_parameter',
                                                                                         'pymoq/mocking/functions.py'),
                                         'pymoq.mocking.functions.is_class_method': ( 'mocking.functions.html#is_class_method',
                                                                                      'pymoq/mocking/functions.py')},
            'pymoq.mocking.objects': { 'pymoq.mocking.objects.Mock': ('mocking_objects.html#mock', 'pymoq/mocking/objects.py'),
                                       'pymoq.mocking.objects.Mock.__getattr__': ( 'mocking_objects.html#mock.__getattr__',
                                                                                   'pymoq/mocking/objects.py'),
                                       'pymoq.mocking.objects.Mock.__init__': ( 'mocking_objects.html#mock.__init__',
                                                                                'pymoq/mocking/objects.py'),
                                       'pymoq.mocking.objects.Mock.__repr__': ( 'mocking_objects.html#mock.__repr__',
                                                                                'pymoq/mocking/objects.py'),
                                       'pymoq.mocking.objects.Mock.__str__': ( 'mocking_objects.html#mock.__str__',
                                                                               'pymoq/mocking/objects.py'),
                                       'pymoq.mocking.objects.Mock._init_function_mocks': ( 'mocking_objects.html#mock._init_function_mocks',
                                                                                            'pymoq/mocking/objects.py'),
                                       'pymoq.mocking.objects._is_public_name': ( 'mocking_objects.html#_is_public_name',
                                                                                  'pymoq/mocking/objects.py'),
                                       'pymoq.mocking.objects.get_public_attributes': ( 'mocking_objects.html#get_public_attributes',
                                                                                        'pymoq/mocking/objects.py'),
                                       'pymoq.mocking.objects.get_public_names': ( 'mocking_objects.html#get_public_names',
                                                                                   'pymoq/mocking/objects.py')},
            'pymoq.return_value_generators': { 'pymoq.return_value_generators.ReturnValueGenerator': ( 'return_value_generators.html#returnvaluegenerator',
                                                                                                       'pymoq/return_value_generators.py'),
                                               'pymoq.return_value_generators.ReturnValueGenerator.__call__': ( 'return_value_generators.html#returnvaluegenerator.__call__',
                                                                                                                'pymoq/return_value_generators.py')},
            'pymoq.signature_validators': { 'pymoq.signature_validators.SignatureValidator': ( 'signature_validators.html#signaturevalidator',
                                                                                               'pymoq/signature_validators.py'),
                                            'pymoq.signature_validators.SignatureValidator.__init__': ( 'signature_validators.html#signaturevalidator.__init__',
                                                                                                        'pymoq/signature_validators.py'),
                                            'pymoq.signature_validators.SignatureValidator.is_valid': ( 'signature_validators.html#signaturevalidator.is_valid',
                                                                                                        'pymoq/signature_validators.py'),
                                            'pymoq.signature_validators.signature_validator_from_arguments': ( 'signature_validators.html#signature_validator_from_arguments',
                                                                                                               'pymoq/signature_validators.py')}}}